generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(cuid())
  username     String @unique
  passwordHash String @map("password_hash")
  name         String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sponsorships Sponsorship[]
  watchlist    Watchlist[]
  watchedList  WatchedList[]

  @@map("users")
}

model Media {
  id     String    @id @default(cuid())
  imdbId String    @unique @map("imdb_id")
  type   MediaType

  watchlist   Watchlist[]
  watchedList WatchedList[]
  sponsorship Sponsorship[]

  @@map("medias")
}

model Watchlist {
  id String @id @default(cuid())

  user    User   @relation(fields: [userId], references: [id])
  media   Media  @relation(fields: [mediaImdbId], references: [imdbId])
  userId  String @map("user_id")
  mediaImdbId String @map("media_imdb_id")

  @@map("watchlists")
}

model WatchedList {
  id String @id @default(cuid())

  user    User   @relation(fields: [userId], references: [id])
  media   Media  @relation(fields: [mediaImdbId], references: [imdbId])
  userId  String @map("user_id")
  mediaImdbId String @map("media_imdb_id")

  @@map("watched_lists")
}

model Sponsorship {
  id    String   @id @default(cuid())
  date  DateTime
  price Float
  who   String

  media   Media  @relation(fields: [mediaImdbId], references: [imdbId])
  user    User   @relation(fields: [userId], references: [id])
  userId  String @map("user_id")
  mediaImdbId String @map("media_imdb_id")

  @@map("sponsorships")
}

enum MediaType {
  SERIES
  MOVIE
}
